name: Release
on:
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  github_build:
    if: startsWith(github.ref, 'refs/tags/')
    name: Build release binaries
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: germinate-x86_64-unknown-linux-gnu.tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: germinate-x86_64-unknown-linux-musl.tar.gz
          - target: x86_64-apple-darwin
            os: macOS-latest
            name: germinate-x86_64-apple-darwin.tar.gz
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install -y musl-tools

      - name: Build target
        if: matrix.target != 'x86_64-unknown-linux-musl'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Build target (musl)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features tls-vendored --target ${{ matrix.target }}

      - name: Prepare build artifacts
        run: |
          cd target/${{ matrix.target }}/release
          strip germinate
          tar czvf ../../../${{ matrix.name }} germinate
          cd -

      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  # Create GitHub release with Rust build targets and release notes
  github_release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Create GitHub Release
    needs: github_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # These can be squashed when https://github.com/actions/download-artifact/issues/6 is closed
      - name: Download releases from github_build
        uses: actions/download-artifact@v1
        with:
          name: germinate-x86_64-unknown-linux-gnu.tar.gz
          path: .
      - name: Download releases from github_build
        uses: actions/download-artifact@v1
        with:
          name: germinate-x86_64-unknown-linux-musl.tar.gz
          path: .
      - name: Download releases from github_build
        uses: actions/download-artifact@v1
        with:
          name: germinate-x86_64-apple-darwin.tar.gz
          path: .

      - name: Generate checksums
        run: for file in germinate-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Create GitHub release ${{ matrix.target }}
        uses: softprops/action-gh-release@v1
        draft: true
        with:
          files: |
            germinate-x86_64-unknown-linux-gnu.tar.gz
            germinate-x86_64-unknown-linux-gnu.tar.gz.sha256
            germinate-x86_64-unknown-linux-musl.tar.gz
            germinate-x86_64-unknown-linux-musl.tar.gz.sha256
            germinate-x86_64-apple-darwin.tar.gz
            germinate-x86_64-apple-darwin.tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
